generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Users {
    id          String         @id @default(uuid())
    email       String         @unique
    name        String
    surname     String
    password    String?
    phone       String         @unique
    image_url   String?
    role        Role           @default(USER)
    Reservation Reservations[]
    car         Cars[]
}

model Floor {
    id            String          @id @default(uuid())
    floor_number  String          @unique
    created_at    DateTime        @default(now())
    updated_at    DateTime        @updatedAt
    parking_slots Parking_slots[]
}

model Parking_slots {
    id           String         @id @default(uuid())
    slot_number  String         @unique
    status       ParkingStatus  @default(IDLE)
    created_at   DateTime       @default(now())
    updated_at   DateTime       @updatedAt
    reservations Reservations[]
    floor_id     String
    floor        Floor          @relation(fields: [floor_id], references: [id])
}

model Reservations {
    id              String            @id @default(uuid())
    user_id         String
    created_at      DateTime          @default(now())
    start_at        DateTime?
    end_at          DateTime?
    updated_at      DateTime          @updatedAt
    user            Users             @relation(fields: [user_id], references: [id])
    parking_slot_id String
    parking_slots   Parking_slots     @relation(fields: [parking_slot_id], references: [id])
    car_id          String
    car             Cars              @relation(fields: [car_id], references: [id])
    price           Float?
    status          ReservationStatus @default(WAITING)
}

model Setting {
    id          String @id @default(uuid())
    charge_rate Float
}

model Cars {
    id            String         @id @default(uuid())
    license_plate String         @unique
    car_model     String
    car_type      String
    image_url     String
    created_at    DateTime       @default(now())
    updated_at    DateTime       @updatedAt
    user_id       String
    user          Users          @relation(fields: [user_id], references: [id])
    Reservations  Reservations[]
}

enum ParkingStatus {
    IDLE
    RESERVED
    FULL
    MAINTENANCE
}

enum Role {
    USER
    ADMIN
    ENGINEER
}

enum ReservationStatus {
    WAITING
    OCCUPIED
    SUCCESS
    CANCEL
    EXPIRED
}
